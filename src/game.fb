graphics 11
data sx() word = 0,0,0,0,0,1, 1,1,0,-1,-1,-1,0,0, 0,0
data sy() word = 0,0,0,0,0,1,-1,0,0, 1,-1, 0,0,1,-1,0

z=16
X=40*z:Y=96*z:COLOR 1
poke 712,8

do
   plot X/z,Y/z
   X=X+8*SX(stick(0)):X=X+8*(X<0)-8*(X>79*z)
   Y=Y+ 16*SY(stick(0)):Y=Y+16*(Y<0)-16*(Y>191*z)

   if strig(0)=0
    ' while strig(0)=0
    'wend
    C=C+1-15*(C=15):COLOR C
   endif
loop


'GAME.ATR: test program
RAMTOP = $6A   : SDMCTL = $22F  : PCOLR0 = $2C0
HPOSP0 = $D000 : GRACTL = $D01D : PMBASE = $D407


'Reserve memory at TOP
MemTop = Peek(RAMTOP) - 4
P0Mem  = $100 * MemTop + $200
oldPos = P0Mem
poke RAMTOP, MemTop


'Activate and configure P/M data
poke 559,0
poke P0Mem, 0 : move P0Mem, P0Mem+1, 127 : ' Clears Memory
poke SDMCTL, Peek(SDMCTL) ! 8
poke PMBASE, MemTop
poke GRACTL, 2
poke 710,0


'P/M data and blank as strings
PMdata = 1 + Adr("8DTD8") : PMclear= 1 + Adr(""$00$00$00$00$00)

' Initial Conditions
xPos = 6400 : yPos = 2560
xSpd =   0 : ySpd =    0

gravity = 8
zcol = 11
poke PCOLR0, zcol

do
 xPos = xPos + xSpd : yPos = yPos + ySpd
 ySpd = ySpd + gravity
 
 if (ySpd > 0) and (yPos > 13800)
   ySpd = -ySpd
   xSpd = Rand(512) - 256
   zcol = zcol + 16
   poke $D01A, zcol : ' Change background color
   if zcol > 255 then zcol = 0
 endif
 if xSpd > 0
  if xPos > 25600 Then xSpd = -xSpd
 else
  if xPos <  6400 Then xSpd = -xSpd
 endif
 sound 0,yPos/128,12,8
 sound 1,255-(yPos/150),8,8
 'sound 0,yPos/164,14,10
 exec MovePm : ' Move P/M Graphics
loop

proc MovePm
 x = xPos / 128 : y = P0Mem + yPos / 128
 pause 0
 inc zcol
 poke HPOSP0, x
 'poke PCOLR0, zcol
 move PMclear, oldPos, 5
 move PMdata,  y,      5
 oldPos = y
endproc